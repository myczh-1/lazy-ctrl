// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/myczh-1/lazy-ctrl-agent",
            "email": "support@lazy-ctrl.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/verify": {
            "post": {
                "description": "Verify PIN for authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Verify PIN",
                "parameters": [
                    {
                        "description": "Authentication request",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/commands": {
            "get": {
                "description": "Retrieve all available commands",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "commands"
                ],
                "summary": "Get all commands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_interface_http.CommandResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new command with the provided configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "commands"
                ],
                "summary": "Create a new command",
                "parameters": [
                    {
                        "description": "Command configuration",
                        "name": "command",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.CreateCommandRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.CommandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/commands/homepage": {
            "get": {
                "description": "Retrieve commands configured for homepage display",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "commands"
                ],
                "summary": "Get homepage commands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_interface_http.CommandResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/commands/{id}": {
            "get": {
                "description": "Retrieve a specific command by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "commands"
                ],
                "summary": "Get command by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Command ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.CommandResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing command",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "commands"
                ],
                "summary": "Update command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Command ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Command updates",
                        "name": "command",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.UpdateCommandRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.CommandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a command by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "commands"
                ],
                "summary": "Delete command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Command ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Command deleted successfully"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/execute": {
            "get": {
                "description": "Execute a command by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "execution"
                ],
                "summary": "Execute a command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Command ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PIN for authentication (if required)",
                        "name": "pin",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ExecuteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Execute a command by its ID using POST method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "execution"
                ],
                "summary": "Execute a command (POST)",
                "parameters": [
                    {
                        "description": "Execute request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ExecuteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ExecuteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/execute/info": {
            "get": {
                "description": "Get information about a command without executing it",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "execution"
                ],
                "summary": "Get command execution info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Command ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the health status of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.HealthResponse"
                        }
                    }
                }
            }
        },
        "/reload": {
            "post": {
                "description": "Reload command configuration from file",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Reload commands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ReloadResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_interface_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Get detailed system status and metrics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get system status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get the current version of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get system version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_interface_http.AuthRequest": {
            "type": "object",
            "required": [
                "pin"
            ],
            "properties": {
                "pin": {
                    "type": "string"
                }
            }
        },
        "internal_interface_http.AuthResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_interface_http.CommandResponse": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "commandType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "homepageColor": {
                    "type": "string"
                },
                "homepagePosition": {
                    "$ref": "#/definitions/internal_interface_http.PositionResponse"
                },
                "homepagePriority": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "requiresPin": {
                    "type": "boolean"
                },
                "showOnHomepage": {
                    "type": "boolean"
                },
                "templateId": {
                    "type": "string"
                },
                "templateParams": {
                    "type": "object",
                    "additionalProperties": true
                },
                "timeout": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "whitelisted": {
                    "type": "boolean"
                }
            }
        },
        "internal_interface_http.CreateCommandRequest": {
            "type": "object",
            "required": [
                "command",
                "id"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "commandType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "homeLayout": {
                    "$ref": "#/definitions/internal_interface_http.HomeLayoutRequest"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "security": {
                    "$ref": "#/definitions/internal_interface_http.SecurityRequest"
                },
                "templateId": {
                    "type": "string"
                },
                "templateParams": {
                    "type": "object",
                    "additionalProperties": true
                },
                "timeout": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "internal_interface_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_interface_http.ExecuteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            }
        },
        "internal_interface_http.ExecuteResponse": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "Duration in milliseconds",
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "exitCode": {
                    "type": "integer"
                },
                "output": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_interface_http.HealthResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "system": {
                    "$ref": "#/definitions/internal_interface_http.SystemInfo"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "internal_interface_http.HomeLayoutRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "defaultPosition": {
                    "$ref": "#/definitions/internal_interface_http.PositionRequest"
                },
                "priority": {
                    "type": "integer"
                },
                "showOnHome": {
                    "type": "boolean"
                }
            }
        },
        "internal_interface_http.PositionRequest": {
            "type": "object",
            "properties": {
                "h": {
                    "type": "integer"
                },
                "w": {
                    "type": "integer"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "internal_interface_http.PositionResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "internal_interface_http.ReloadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_interface_http.SecurityRequest": {
            "type": "object",
            "properties": {
                "adminOnly": {
                    "type": "boolean"
                },
                "requirePin": {
                    "type": "boolean"
                },
                "whitelist": {
                    "type": "boolean"
                }
            }
        },
        "internal_interface_http.SystemInfo": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "goVersion": {
                    "type": "string"
                },
                "numCPU": {
                    "type": "integer"
                },
                "numGoroutine": {
                    "type": "integer"
                },
                "os": {
                    "type": "string"
                }
            }
        },
        "internal_interface_http.UpdateCommandRequest": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "PinAuth": {
            "description": "PIN authentication for secure access",
            "type": "apiKey",
            "name": "X-Pin",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0.0",
	Host:             "localhost:7070",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Lazy-Ctrl Agent API",
	Description:      "Remote computer control agent with HTTP/gRPC/MQTT support",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
